{"name": "test_Persona_Natural", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x0063A813+48355]\n\t(No symbol) [0x005CC4B1]\n\t(No symbol) [0x004D5358]\n\t(No symbol) [0x005009A5]\n\t(No symbol) [0x00500B3B]\n\t(No symbol) [0x0052E232]\n\t(No symbol) [0x0051A784]\n\t(No symbol) [0x0052C922]\n\t(No symbol) [0x0051A536]\n\t(No symbol) [0x004F82DC]\n\t(No symbol) [0x004F93DD]\n\tGetHandleVerifier [0x0089AABD+2539405]\n\tGetHandleVerifier [0x008DA78F+2800735]\n\tGetHandleVerifier [0x008D456C+2775612]\n\tGetHandleVerifier [0x006C51E0+616112]\n\t(No symbol) [0x005D5F8C]\n\t(No symbol) [0x005D2328]\n\t(No symbol) [0x005D240B]\n\t(No symbol) [0x005C4FF7]\n\tBaseThreadInitThunk [0x76E8FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x776F7A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x776F7A6E+238]", "trace": "self = <test.Scripts.test_Eccommerce.TestEcommerce testMethod=test_Persona_Natural>\n\n    def test_Persona_Natural(self):\n    \n        driver = self.driver\n        driver.get(Login.get_base_url())\n        tipo_cert = PersonaNatural(driver)\n        politicas = Politicas(driver)\n        detalles_cert = Detalles_Cert(driver)\n        pagina_inicio_sesion = Login(driver)\n    \n        pagina_inicio_sesion.inicio_Sesion(usuario, password)\n        pagina_inicio_sesion.click_inicio()\n        tipo_cert.tipo_cer()\n        politicas.politicas()\n        detalles_cert.detalle_cert_token_virtual(\"123456\")\n>       tipo_cert.datos_PN(identificacion, fecha_doc, nombre, apellido, departamento, ciudad, direccion, correo, telefono, celular)\n\ntest\\Scripts\\test_Eccommerce.py:133: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc\\PageObject\\Pages\\Persona_Natural.py:133: in datos_PN\n    self.get_municipio().send_keys(municipio)\nsrc\\PageObject\\Pages\\Persona_Natural.py:60: in get_municipio\n    return WebDriverWait(self.driver, 20).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"da1b74963e92b8a46a4fc5926859e5c9\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001FCD70AB6A0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x0063A813+48355]\nE       \t(No symbol) [0x005CC4B1]\nE       \t(No symbol) [0x004D5358]\nE       \t(No symbol) [0x005009A5]\nE       \t(No symbol) [0x00500B3B]\nE       \t(No symbol) [0x0052E232]\nE       \t(No symbol) [0x0051A784]\nE       \t(No symbol) [0x0052C922]\nE       \t(No symbol) [0x0051A536]\nE       \t(No symbol) [0x004F82DC]\nE       \t(No symbol) [0x004F93DD]\nE       \tGetHandleVerifier [0x0089AABD+2539405]\nE       \tGetHandleVerifier [0x008DA78F+2800735]\nE       \tGetHandleVerifier [0x008D456C+2775612]\nE       \tGetHandleVerifier [0x006C51E0+616112]\nE       \t(No symbol) [0x005D5F8C]\nE       \t(No symbol) [0x005D2328]\nE       \t(No symbol) [0x005D240B]\nE       \t(No symbol) [0x005C4FF7]\nE       \tBaseThreadInitThunk [0x76E8FA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x776F7A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x776F7A6E+238]\n\nC:\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "start": 1692137648479, "stop": 1692137681850, "uuid": "5b0ab936-2211-41dd-b0f6-d4d0cfec5970", "historyId": "e404b896b5a86fc0d2d0223dc0939bc9", "testCaseId": "e404b896b5a86fc0d2d0223dc0939bc9", "fullName": "test.Scripts.test_Eccommerce.TestEcommerce#test_Persona_Natural", "labels": [{"name": "parentSuite", "value": "test.Scripts"}, {"name": "suite", "value": "test_Eccommerce"}, {"name": "subSuite", "value": "TestEcommerce"}, {"name": "host", "value": "BOGLP032"}, {"name": "thread", "value": "32976-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.Scripts.test_Eccommerce"}]}